<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd-4.0">

	<!-- 
	<bean id="Server" class="org.eclipse.jetty.server.Server" init-method="start" destroy-method="stop">  
        <property name="connectors">  
            <list>  
                <bean id="Connector" class="org.eclipse.jetty.server.nio.SelectChannelConnector">  
                    <property name="port" value="8080" />  
                </bean>  
            </list>  
        </property>  
  
        <property name="handler">  
            <bean id="handlers" class="org.eclipse.jetty.server.handler.HandlerList">  
                <property name="handlers">  
                    <list>  
                        <bean class="com.basic.framework.server.JettyServerHandler" />
                        <bean class="org.eclipse.jetty.server.handler.DefaultHandler" />  
                    </list>  
                </property>  
            </bean>  
        </property>  
    </bean>
 	-->
 	
	<!-- 属性文件读入 -->
	<bean id="properties"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="order" value="1" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath:config/properties/datasource.properties</value>
				<value>classpath:config/properties/dubbo-provider.properties</value>
				<value>classpath:config/properties/activemq-consumer.properties</value>
				<value>classpath:config/properties/redis.properties</value>
				<value>classpath:config/properties/redisCacheCode.properties</value>
			</list>
		</property>
	</bean>

	<!-- 基于Aspect切面的驱动器，自动为Spring容器中匹配@Aspect切面的Bean创建代理，完成切面织入 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- DataSource -->
	<import resource="./application-datasource.xml" />

	<!-- mybatis -->
	<import resource="./application-mybatis.xml" />
	
	<!-- dubbo provider -->
	<import resource="./application-dubbo-provider.xml" />
	
	<!-- redis -->
	<import resource="./application-redis.xml" />
	
	<!-- mq consumer -->
	<import resource="./application-mq-consumer.xml" />
	
	<!-- 自动扫描，匹配service，repository层 -->
	<context:component-scan base-package="com.basic.>
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Repository" />
		<!-- <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/> -->
	</context:component-scan>

</beans>